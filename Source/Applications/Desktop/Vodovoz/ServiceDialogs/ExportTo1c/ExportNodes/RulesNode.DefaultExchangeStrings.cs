namespace Vodovoz.ServiceDialogs.ExportTo1c.ExportNodes
{
	public partial class RulesNode
	{
		private static class DefaultExchangeStrings
		{
			#region rules 
			public static readonly string DefaultExchangeRules = @"<ПравилаОбмена>
				<ВерсияФормата РежимСовместимости="""">2.01</ВерсияФормата>
				<Ид>fae45d0f-0312-4eb8-a8d0-1932250b2e07    </Ид>
				<Наименование>ВОДОВОЗ декабрь 20</Наименование>
				<ДатаВремяСоздания>2021-02-17T14:51:07</ДатаВремяСоздания>
				<Источник ВерсияПлатформы=""8.0"" ВерсияКонфигурации=""3.0.81.23"" СинонимКонфигурации=""Бухгалтерия предприятия, редакция 3.0"">БухгалтерияПредприятия</Источник>
				<Приемник ВерсияПлатформы=""8.0"" ВерсияКонфигурации=""3.0.81.23"" СинонимКонфигурации=""Бухгалтерия предприятия, редакция 3.0"">БухгалтерияПредприятия</Приемник>
				<ПослеЗагрузкиОбъекта>Если ИмяТипаОбъекта = ""Справочник"" ИЛИ ИмяТипаОбъекта = ""ПланВидовХарактеристик"" Тогда

				Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
					
					Объект.УстановитьНовыйКод();
					
				КонецЕсли;
				
				РеквизитОрганизация = Объект.Метаданные().Реквизиты.Найти(""Организация"");
				Если РеквизитОрганизация&lt;&gt; Неопределено
					И (НЕ ЗначениеЗаполнено(Объект.Организация)) Тогда
					
					Если (НЕ Объект.ЭтоГруппа) ИЛИ (РеквизитОрганизация.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы) Тогда
						Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию(""ОсновнаяОрганизация"");

					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяТипаОбъекта = ""Документ"" Тогда

				Если НЕ ЗначениеЗаполнено(Объект.Номер) Тогда

					ОбщегоНазначения.УстановитьНомерДокумента(Объект);
					
				КонецЕсли;
				
				Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента(""Организация"", Объект.Метаданные()) 
				  И (НЕ ЗначениеЗаполнено(Объект.Организация)) Тогда
					Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию(""ОсновнаяОрганизация"");

				КонецЕсли;

				Если НЕ Объект.Метаданные().ТабличныеЧасти.Найти(""Товары"") = Неопределено Тогда
				Объект.ДополнительныеСвойства.Вставить(""ЗаполнитьСчетаУчетаПередЗаписью"", Истина);
				СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(Объект, РежимЗаписиДокумента.Проведение);
				Попытка	
							Объект.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					Сообщить(""Ошибка при проведении ""+ Строка(Объект) + "". Описание: "" + ОписаниеОШибки());
					Объект.Записать(РежимЗаписиДокумента.Запись);
				КонецПопытки;
				КонецЕсли;
				
			КонецЕсли</ПослеЗагрузкиОбъекта>
				<Параметры/>
				<Обработки/>
				<ПравилаКонвертацииОбъектов>
					<Правило>
						<Код>АвансовыйОтчет</Код>
						<ПослеЗагрузки>Для каждого СтрокаТЧ из Объект.Товары Цикл
				
				СчетаУчета = БухгалтерскийУчет.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, СтрокаТЧ.Номенклатура);
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Товары"", Истина, Истина);
				
			КонецЦикла;
				
			МассивТЧ = Новый Массив;
			МассивТЧ.Добавить(""ВозвратнаяТара"");
			Для каждого ИмяТЧ из МассивТЧ Цикл
				Для каждого СтрокаТЧ из Объект[ИмяТЧ] Цикл
					Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ИмяТЧ, Истина, Истина);
				КонецЦикла;
			КонецЦикла;

			Для каждого СтрокаТабличнойЧасти Из Объект.ОплатаПоставщикам Цикл
				СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, СтрокаТабличнойЧасти.Контрагент, СтрокаТабличнойЧасти.ДоговорКонтрагента);

				СтрокаТабличнойЧасти.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
				СтрокаТабличнойЧасти.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"") + Объект.ОплатаПоставщикам.Итог(""Сумма"") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Прочее"");</ПослеЗагрузки>
						<Источник>ДокументСсылка.АвансовыйОтчет</Источник>
						<Приемник>ДокументСсылка.АвансовыйОтчет</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ВозвратТоваровОтПокупателя</Код>
						<ПриЗагрузке>Если НЕ Параметры.Свойство(""КомиссияПоСтрокамТабличнойЧасти"") Тогда
				
				Параметры.Вставить(""КомиссияПоСтрокамТабличнойЧасти"", Новый Соответствие);
				
			КонецЕсли;

			КомиссияПоСтрокамТабличнойЧасти = Новый Соответствие;

			Пока ФайлОбмена.Прочитать() Цикл
					
				ИмяУзла = ФайлОбмена.ЛокальноеИмя;
				ТипУзла = ФайлОбмена.ТипУзла;
				
				Если ИмяУзла = ""Строка"" Тогда
					
					КомиссияПоСтрокамТабличнойЧасти.Вставить(одАтрибут(ФайлОбмена, одТипЧисло, ""НомерСтроки""), одЗначениеЭлемента(ФайлОбмена, Тип(""Булево"")));
					
				ИначеЕсли (ИмяУзла = ""КомиссияПоСтрокамТабличнойЧасти"") И (ТипУзла = одТипУзлаXML_КонецЭлемента) Тогда
					
					Параметры.КомиссияПоСтрокамТабличнойЧасти.Вставить(Ссылка, КомиссияПоСтрокамТабличнойЧасти);
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;</ПриЗагрузке>
						<ПослеЗагрузки>

			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.ВозвратнаяТара, ""ВозвратнаяТара"", Истина);
			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, ""Товары"", Истина);

			СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

			Объект.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетовПокупателя;
			Объект.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансовПокупателя;
			Объект.СчетУчетаРасчетовПоТаре           = СчетаУчета.СчетУчетаТарыПокупателя;

			Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
				Объект.Склад = Константы.СкладДляОбменаДаннымиСУТ.Получить();
			КонецЕсли;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"");</ПослеЗагрузки>
						<Источник>ДокументСсылка.ВозвратОтПокупателя</Источник>
						<Приемник>ДокументСсылка.ВозвратТоваровОтПокупателя</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ВозвратТоваровПоставщику</Код>
						<ПриЗагрузке> Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПриЗагрузке>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

			Объект.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетов;
			Объект.СчетУчетаРасчетовПоПретензиям     = СчетаУчета.СчетРасчетовПоПретензиям;

			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.ВозвратнаяТара, ""ВозвратнаяТара"", Истина);
			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, ""Товары"", Истина);

			Объект.СтатьяДоходовИРасходов = Справочники.ПрочиеДоходыИРасходы.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров;
			Объект.ЗаполнитьСчетаУчетаРасчетов();

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"");</ПослеЗагрузки>
						<Источник>ДокументСсылка.ВозвратПоставщику</Источник>
						<Приемник>ДокументСсылка.ВозвратТоваровПоставщику</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Доверенность</Код>
						<ПослеЗагрузки>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.Доверенность</Источник>
						<Приемник>ДокументСсылка.Доверенность</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ИнвентаризацияТоваровНаСкладе</Код>
						<ПослеЗагрузки>
			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество;
			КонецЦикла;


			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ИнвентаризацияТМЦ</Источник>
						<Приемник>ДокументСсылка.ИнвентаризацияТоваровНаСкладе</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>КорректировкаДолга</Код>
						<ПослеЗагрузки>ФормаОбъекта = Объект.ПолучитьФорму();

			Для каждого СтрокаТЧ Из Объект.СуммыДолга Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СчетУчетаРасчетов) Тогда
					ФормаОбъекта.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТЧ);
				КонецЕсли;
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.КорректировкаДолга</Источник>
						<Приемник>ДокументСсылка.КорректировкаДолга</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ОприходованиеТоваров</Код>
						<ПослеЗагрузки>Для каждого СтрокаТЧ Из Объект.Товары Цикл
				
				СчетаУчета   = БухгалтерскийУчет.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, СтрокаТЧ.Номенклатура, Объект.Склад);

			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = Объект.Товары.Итог(""Сумма"");</ПослеЗагрузки>
						<Источник>ДокументСсылка.ОприходованиеТМЦ</Источник>
						<Приемник>ДокументСсылка.ОприходованиеТоваров</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ОтчетКомиссионераОПродажах</Код>
						<ПослеЗагрузки>Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, ""Товары"", Истина);

			СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
			Объект.СчетУчетаРасчетовСКонтрагентом          = СчетаУчета.СчетРасчетовПокупателя;
			Если Объект.УдержатьВознаграждение Тогда
				Объект.СчетУчетаРасчетовПоАвансамПолученным = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				Объект.СчетУчетаРасчетовПоАвансамПолученным = СчетаУчета.СчетАвансовПокупателя;
			КонецЕсли;
			Объект.СчетУчетаРасчетовЗаПосредническиеУслуги = СчетаУчета.СчетРасчетов;
			Объект.СчетУчетаРасчетовПоАвансамВыданным      = СчетаУчета.СчетАвансов;
			Объект.СчетУчетаНДС                            = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам;
			Объект.СчетУчетаЗатрат                         = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;

			Если НалоговыйУчетУСН.ПрименениеУСН(Объект.Организация, Объект.Дата) Тогда

				Объект.СчетУчетаРасчетовСКонтрагентомУСН          = СчетаУчета.СчетРасчетовПокупателяУСН;
				Объект.СчетУчетаРасчетовПоАвансамПолученнымУСН    = СчетаУчета.СчетАвансовПокупателяУСН;
				Объект.СчетУчетаРасчетовЗаПосредническиеУслугиУСН = СчетаУчета.СчетРасчетовУСН;
				Объект.СчетУчетаРасчетовПоАвансамВыданнымУСН      = СчетаУчета.СчетАвансовУСН;

			КонецЕсли;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента      = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"");
			Объект.СуммаВознаграждения = Объект.Товары.Итог(""СуммаВознаграждения"");
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ОтчетКомиссионера</Источник>
						<Приемник>ДокументСсылка.ОтчетКомиссионераОПродажах</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ОтчетКомитентуОПродажах</Код>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
			Если Объект.УдержатьВознаграждение Тогда
				Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
			КонецЕсли;

			СчетаУчета = БухгалтерскийУчет.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, Объект.УслугаПоВознаграждению);

			Объект.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"");
			Объект.СуммаВознаграждения = Объект.Товары.Итог(""СуммаВознаграждения"")+?(Объект.СуммаВключаетНДС,0,Объект.Товары.Итог(""СуммаНДСВознаграждения""));</ПослеЗагрузки>
						<Источник>ДокументСсылка.ОтчетКомитенту</Источник>
						<Приемник>ДокументСсылка.ОтчетКомитентуОПродажах</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПеремещениеТоваров</Код>
						<ПослеЗагрузки>Для каждого СтрокаТабЧасти Из Объект.Товары Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабЧасти, ""Товары"", Истина);
			КонецЦикла;

			Для каждого СтрокаТабЧасти Из Объект.ТоварыНаКомиссии Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабЧасти, ""ТоварыНаКомиссии"", Истина);
			КонецЦикла;

			Для каждого СтрокаТабЧасти Из Объект.ВозвратнаяТара Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабЧасти, ""ВозвратнаяТара"", Истина);
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Если Объект.ВидОперации.Пустая() Тогда
				Объект.ВидОперации = Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПеремещениеТМЦ</Источник>
						<Приемник>ДокументСсылка.ПеремещениеТоваров</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПереоценкаТоваровВРознице</Код>
						<ПослеЗагрузки>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПереоценкаРозница</Источник>
						<Приемник>ДокументСсылка.ПереоценкаТоваровВРознице</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПриходныйКассовыйОрдер</Код>
						<ПослеЗагрузки>Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
				Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
			Иначе
				Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизацииВал;
			КонецЕсли;	

			МассивПустыхСтрок = Новый Массив;

			Для каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
				Если НЕ (Объект.ВидОперации = Перечисления.ВидыОперацийПКО.РасчетыПоКредитамИЗаймам)Тогда

					СтрокаПлатеж.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
					СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, СтрокаПлатеж.ДоговорКонтрагента);

					Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратОтПоставщика тогда

						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетов;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансов;

					Иначе

						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетовПокупателя;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансовПокупателя;

					КонецЕсли;

					Если СтрокаПлатеж.СуммаПлатежа = 0  Тогда
						МассивПустыхСтрок.Добавить(СтрокаПлатеж);
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
				НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
			КонецЕсли;

			Для каждого ПустойПлатеж Из МассивПустыхСтрок Цикл
				 Объект.РасшифровкаПлатежа.Удалить(ПустойПлатеж);
			КонецЦикла;

			Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
				Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПКО</Источник>
						<Приемник>ДокументСсылка.ПриходныйКассовыйОрдер</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПоступлениеДопРасходов</Код>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
			Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, Истина, Истина);
			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
			Объект.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Объект.Сумма, Объект.УчитыватьНДС, Объект.СуммаВключаетНДС, УчетНДС.ПолучитьСтавкуНДС(Объект.СтавкаНДС));

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПоступлениеДопРасходы</Источник>
						<Приемник>ДокументСсылка.ПоступлениеДопРасходов</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПоступлениеТоваровУслугПрочее</Код>
						<ПриЗагрузке>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПриЗагрузке>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

			Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
			КонецЕсли;

			Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
			Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТары;

			Для каждого СтрокаТЧ из Объект.Товары Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Товары"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.Услуги Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Услуги"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.ВозвратнаяТара Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""ВозвратнаяТара"", Истина, Истина);
			КонецЦикла;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПоступлениеПрочее</Источник>
						<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПоступлениеТоваровУслуг</Код>
						<ПриЗагрузке>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПриЗагрузке>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

			Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
			КонецЕсли;

			Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
			Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТары;

			Для каждого СтрокаТЧ из Объект.Товары Цикл
				
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Товары"", Истина, Истина);
				
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.Услуги Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Услуги"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.ВозвратнаяТара Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""ВозвратнаяТара"", Истина, Истина);
			КонецЦикла;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПоступлениеТМЦ</Источник>
						<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПоступлениеТоваровУслугРозница</Код>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

			Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
			КонецЕсли;

			Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
			Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТары;

			Для каждого СтрокаТЧ из Объект.Товары Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Товары"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.Услуги Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Услуги"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.ВозвратнаяТара Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""ВозвратнаяТара"", Истина, Истина);
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПоступлениеТМЦРозница</Источник>
						<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>РеализацияТоваровУслугПрочее</Код>
						<ПослеЗагрузки>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, ""Товары"", Истина);

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Услуги"");
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.РеализацияПрочее</Источник>
						<Приемник>ДокументСсылка.РеализацияТоваровУслуг</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>РеализацияРозница</Код>
						<ПриЗагрузке>Если НЕ Параметры.Свойство(""КомиссияПоСтрокамТабличнойЧасти"") Тогда
				
				Параметры.Вставить(""КомиссияПоСтрокамТабличнойЧасти"", Новый Соответствие);
				
			КонецЕсли;

			КомиссияПоСтрокамТабличнойЧасти = Новый Соответствие;

			Пока ФайлОбмена.Прочитать() Цикл
					
				ИмяУзла = ФайлОбмена.ЛокальноеИмя;
				ТипУзла = ФайлОбмена.ТипУзла;
				
				Если ИмяУзла = ""Строка"" Тогда
					
					КомиссияПоСтрокамТабличнойЧасти.Вставить(одАтрибут(ФайлОбмена, одТипЧисло, ""НомерСтроки""), одЗначениеЭлемента(ФайлОбмена, Тип(""Булево"")));
					
				ИначеЕсли (ИмяУзла = ""КомиссияПоСтрокамТабличнойЧасти"") И (ТипУзла = одТипУзлаXML_КонецЭлемента) Тогда
					
					Параметры.КомиссияПоСтрокамТабличнойЧасти.Вставить(Ссылка, КомиссияПоСтрокамТабличнойЧасти);
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;</ПриЗагрузке>
						<ПослеЗагрузки>

			СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
			Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
				Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
				Объект.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
				Объект.СчетУчетаРасчетовПоТаре        = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
			Иначе
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
				Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансовПокупателя;
				Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТарыПокупателя;
			КонецЕсли;
			Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТарыПокупателя;
			Объект.ДополнительныеСвойства.Вставить(""ЗаполнитьСчетаУчетаПередЗаписью"", Истина);

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Услуги"");

			Если Объект.Склад.ВидСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
				Сообщить(""Загружен документ розничной реализации с оптового склада! Необходимо передать товары в розницу вручную!"", СтатусСообщения.Важное);
				Сообщить("""" + Объект.Ссылка);
			КонецЕсли;
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.РеализацияРозница</Источник>
						<Приемник>ДокументСсылка.РеализацияТоваровУслуг</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>РасходныйКассовыйОрдер</Код>
						<ПослеЗагрузки>Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
				СтрокаПлатежа = Объект.РасшифровкаПлатежа.Добавить();
				СтрокаПлатежа.СуммаПлатежа = Объект.СуммаДокумента;
			КонецЕсли;

			Объект.НомерЧекаККМ = 0;

			Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
				Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
			Иначе
				Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизацииВал;
			КонецЕсли;	

			МассивПустыхСтрок = Новый Массив;

			Для каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
				
				Если НЕ (Объект.ВидОперации = Перечисления.ВидыОперацийРКО.РасчетыПоКредитамИЗаймам)Тогда

					СтрокаПлатеж.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
					СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, СтрокаПлатеж.ДоговорКонтрагента);

					Если Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратПокупателю тогда

						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетовПокупателя;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансовПокупателя;

					Иначе

						Если СтрокаПлатеж.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
							СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;

						ИначеЕсли СтрокаПлатеж.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
							СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками;

						Иначе
							СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;

						КонецЕсли;

						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансов;

					КонецЕсли;

				КонецЕсли;
				
				Если СтрокаПлатеж.СуммаПлатежа = 0  Тогда
					МассивПустыхСтрок.Добавить(СтрокаПлатеж);
				КонецЕсли;
				
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Для каждого ПустойПлатеж Из МассивПустыхСтрок Цикл
				 Объект.РасшифровкаПлатежа.Удалить(ПустойПлатеж);
			КонецЦикла;

			Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
				Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.РКО</Источник>
						<Приемник>ДокументСсылка.РасходныйКассовыйОрдер</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СписаниеТоваров</Код>
						<ПриЗагрузке>Если НЕ Параметры.Свойство(""КомиссияПоСтрокамТабличнойЧасти"") Тогда
				
				Параметры.Вставить(""КомиссияПоСтрокамТабличнойЧасти"", Новый Соответствие);
				
			КонецЕсли;

			КомиссияПоСтрокамТабличнойЧасти = Новый Соответствие;

			Пока ФайлОбмена.Прочитать() Цикл
					
				ИмяУзла = ФайлОбмена.ЛокальноеИмя;
				ТипУзла = ФайлОбмена.ТипУзла;
				
				Если ИмяУзла = ""Строка"" Тогда
					
					КомиссияПоСтрокамТабличнойЧасти.Вставить(одАтрибут(ФайлОбмена, одТипЧисло, ""НомерСтроки""), одЗначениеЭлемента(ФайлОбмена, Тип(""Булево"")));
					
				ИначеЕсли (ИмяУзла = ""КомиссияПоСтрокамТабличнойЧасти"") И (ТипУзла = одТипУзлаXML_КонецЭлемента) Тогда
					
					Параметры.КомиссияПоСтрокамТабличнойЧасти.Вставить(Ссылка, КомиссияПоСтрокамТабличнойЧасти);
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;</ПриЗагрузке>
						<ПослеЗагрузки>

			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.ВозвратнаяТара, ""ВозвратнаяТара"", Истина);
			Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, ""Товары"", Истина);

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Объект.СуммаДокумента = Объект.Товары.Итог(""Сумма"");</ПослеЗагрузки>
						<Источник>ДокументСсылка.СписаниеТМЦ</Источник>
						<Приемник>ДокументСсылка.СписаниеТоваров</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПлатежноеПоручениеВходящее</Код>
						<ПослеЗагрузки>Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
				Объект.СчетБанк = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			Иначе
				Объект.СчетБанк = ПланыСчетов.Хозрасчетный.ВалютныеСчета;
			КонецЕсли;	

			МассивПустыхСтрок = Новый Массив;

			Для каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
				Если НЕ (Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам) Тогда

					СтрокаПлатеж.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
					СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, СтрокаПлатеж.ДоговорКонтрагента);

					Если Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика тогда

						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетов;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансов;

					Иначе
						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетовПокупателя;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансовПокупателя;

					КонецЕсли;
					
					Если СтрокаПлатеж.СуммаПлатежа = 0  Тогда
						МассивПустыхСтрок.Добавить(СтрокаПлатеж);
					КонецЕсли;

				КонецЕсли;
			КонецЦикла;

			Объект.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетов;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
				НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
			КонецЕсли;

			Для каждого ПустойПлатеж Из МассивПустыхСтрок Цикл
				 Объект.РасшифровкаПлатежа.Удалить(ПустойПлатеж);
			КонецЦикла;

			Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
				Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.СтрокаВыпискиПриход</Источник>
						<Приемник>ДокументСсылка.ПоступлениеНаРасчетныйСчет</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПлатежныйОрдерСписаниеДенежныхСредств</Код>
						<ПослеЗагрузки>Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
				Объект.СчетБанк = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
			Иначе
				Объект.СчетБанк = ПланыСчетов.Хозрасчетный.ВалютныеСчета;
			КонецЕсли;	

			МассивПустыхСтрок = Новый Массив;

			Для каждого СтрокаПлатеж Из Объект.РасшифровкаПлатежа Цикл
				Если НЕ (Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймам) Тогда

					СтрокаПлатеж.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
					СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, СтрокаПлатеж.ДоговорКонтрагента);
					Если СтрокаПлатеж.СуммаПлатежа = 0  Тогда
						МассивПустыхСтрок.Добавить(СтрокаПлатеж);
					КонецЕсли;
					
					Если Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю тогда

						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетовПокупателя;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансовПокупателя;

					Иначе

						СтрокаПлатеж.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетов;
						СтрокаПлатеж.СчетУчетаРасчетовПоАвансам        = СчетаУчета.СчетАвансов;

					КонецЕсли;

				КонецЕсли;
			КонецЦикла;

			Объект.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетовПокупателя;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Для каждого ПустойПлатеж Из МассивПустыхСтрок Цикл
				 Объект.РасшифровкаПлатежа.Удалить(ПустойПлатеж);
			КонецЦикла;

			Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
				Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.СтрокаВыпискиРасход</Источник>
						<Приемник>ДокументСсылка.СписаниеСРасчетногоСчета</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СчетФактураПолученный</Код>
						<ПриЗагрузке>Если ОбъектНайден Тогда
				Объект.ДокументыОснования.Очистить();
			КонецЕсли;</ПриЗагрузке>
						<ПослеЗагрузки>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
				НеНашлиДокументОснование = Истина;
				Для каждого ДокументОснование из Объект.ДокументыОснования Цикл
					Если ДокументОснование = Объект.ДокументОснование Тогда
						НеНашлиДокументОснование = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если НеНашлиДокументОснование Тогда
					НовыйДокументОснование = Объект.ДокументыОснования.Добавить();
					НовыйДокументОснование.ДокументОснование = Объект.ДокументОснование;
				КонецЕсли;
				
			КонецЕсли;

			Если (Объект.НаАванс) И (Объект.Авансы.Количество() = 0) Тогда
					Объект.Авансы.Добавить();
					Объект.Авансы[0].Сумма = Объект.СуммаДокумента;
			КонецЕсли;

			Объект.ОпределениеПараметровСчетаФактуры();</ПослеЗагрузки>
						<Источник>ДокументСсылка.СчетФактураПолученный</Источник>
						<Приемник>ДокументСсылка.СчетФактураПолученный</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПоступлениеТоваровУслугИмпорт</Код>
						<ПослеЗагрузки>СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

			Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
			Иначе
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
			КонецЕсли;

			Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
			Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТары;

			Для каждого СтрокаТЧ из Объект.Товары Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Товары"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.Услуги Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""Услуги"", Истина, Истина);
			КонецЦикла;

			Для каждого СтрокаТЧ Из Объект.ВозвратнаяТара Цикл
				Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ""ВозвратнаяТара"", Истина, Истина);
			КонецЦикла;

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;

			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект);
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПоступлениеТМЦИмпорт</Источник>
						<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ГТДИмпорт</Код>
						<ПослеЗагрузки>Объект.ЗаполнитьСчетаУчетаВТабЧасти(Объект.Товары, Истина, Истина);

			СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
			Объект.СчетУчетаРасчетовСКонтрагентомВал = ПланыСчетов.Хозрасчетный.НайтиПоКоду(""60.21"");

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПоступлениеТМЦИмпорт</Источник>
						<Приемник>ДокументСсылка.ГТДИмпорт</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПлатежноеПоручениеИсходящее</Код>
						<ПослеЗагрузки>Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Если Объект.РасшифровкаПлатежа.Количество() = 0 Тогда
				НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
			КонецЕсли;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ПлатежноеПоручение</Источник>
						<Приемник>ДокументСсылка.ПлатежноеПоручение</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СчетНаОплатуПокупателю</Код>
						<Источник>ДокументСсылка.АвансовыйОтчет</Источник>
						<Приемник>ДокументСсылка.СчетНаОплатуПокупателю</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СчетНаОплатуПокупателюПоЗаявке</Код>
						<ПослеЗагрузки>// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;</ПослеЗагрузки>
						<Источник>ДокументСсылка.ЗаявкаПокупателя</Источник>
						<Приемник>ДокументСсылка.СчетНаОплатуПокупателю</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>КомплектацияНоменклатуры</Код>
						<Источник>ДокументСсылка.КомплектацияТМЦ</Источник>
						<Приемник>ДокументСсылка.КомплектацияНоменклатуры</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Банки</Код>
						<Источник>СправочникСсылка.Банки</Источник>
						<Приемник>СправочникСсылка.Банки</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>БанковскиеСчета</Код>
						<Источник>СправочникСсылка.БанковскиеСчета</Источник>
						<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Валюты</Код>
						<Источник>СправочникСсылка.Валюты</Источник>
						<Приемник>СправочникСсылка.Валюты</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>НомераГТД</Код>
						<Источник>СправочникСсылка.ГТД</Источник>
						<Приемник>СправочникСсылка.НомераГТД</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СтатьиДвиженияДенежныхСредств</Код>
						<Источник>СправочникСсылка.ДвиженияДенежныхСредств</Источник>
						<Приемник>СправочникСсылка.СтатьиДвиженияДенежныхСредств</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Контрагенты</Код>
						<ПослеЗагрузки>
			ДлинаИНН = СтрДлина(СокрЛП(Объект.ИНН));
			Если ДлинаИНН = 10 Тогда 
				Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
			ИначеЕсли ДлинаИНН = 12 Тогда 
				Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
			КонецЕсли;</ПослеЗагрузки>
						<ПоследовательностьПолейПоиска>Если НомерВариантаПоиска = 1 тогда 
				Если ЗначениеЗаполнено(СвойстваПоиска[""ИНН""]) Тогда 
					СтрокаИменСвойствПоиска = ""ИНН, КПП"";
				Иначе
					СтрокаИменСвойствПоиска = НомерВариантаПоиска;
					КонецЕсли;
			КонецЕсли;</ПоследовательностьПолейПоиска>
						<Источник>СправочникСсылка.Контрагенты</Источник>
						<Приемник>СправочникСсылка.Контрагенты</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Номенклатура</Код>
						<Источник>СправочникСсылка.Номенклатура</Источник>
						<Приемник>СправочникСсылка.Номенклатура</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>КлассификаторЕдиницИзмерения</Код>
						<Источник>СправочникСсылка.ОКЕИ</Источник>
						<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Кассы</Код>
						<Источник>СправочникСсылка.Склады</Источник>
						<Приемник>СправочникСсылка.Склады</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Склады</Код>
						<Источник>СправочникСсылка.Склады</Источник>
						<Приемник>СправочникСсылка.Склады</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ФизическиеЛица</Код>
						<Источник>СправочникСсылка.ФизЛица</Источник>
						<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СтраныМира</Код>
						<Источник>СправочникСсылка.ОКСМ</Источник>
						<Приемник>СправочникСсылка.СтраныМира</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ОКЕИ</Код>
						<Источник>СправочникСсылка.ОКЕИ</Источник>
						<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПрочиеДоходыИРасходы</Код>
						<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СтатьиДвиженияДенежныхСредствСправочник</Код>
						<Источник>СправочникСсылка.ДвиженияДенежныхСредств</Источник>
						<Приемник>СправочникСсылка.СтатьиДвиженияДенежныхСредств</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>Пользователи</Код>
						<Источник>СправочникСсылка.Пользователи</Источник>
						<Приемник>СправочникСсылка.Пользователи</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ПорядкиОкругления</Код>
						<Источник>ПеречислениеСсылка.ПорядкиОкругления</Источник>
						<Приемник>ПеречислениеСсылка.ПорядкиОкругления</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СтавкиНДС</Код>
						<Источник>ПеречислениеСсылка.СтавкиНДС</Источник>
						<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>СпособыРасчетаКомиссионногоВознаграждения</Код>
						<Источник>ПеречислениеСсылка.СпособыРасчетаВознаграждения</Источник>
						<Приемник>ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ВидыДоговоровКонтрагентов</Код>
						<Приемник>ПеречислениеСсылка.ВидыДоговоровКонтрагентов</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ФИОФизЛиц</Код>
						<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ВидыНоменклатуры</Код>
						<Приемник>СправочникСсылка.ВидыНоменклатуры</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>КонтактнаяИнформация</Код>
						<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Группа>
						<Код>Документы</Код>
						<Наименование>Документы</Наименование>
						<Порядок>50</Порядок>
						<Правило>
							<Код>ОтчетОРозничныхПродажах</Код>
							<Наименование>Документ: Отчет о розничных продажах</Наименование>
							<Порядок>50</Порядок>
							<ПослеЗагрузки>ПустыеСтрокиОплата = Объект.Оплата.НайтиСтроки(Новый Структура(""СуммаОплаты"", 0));

			Для Каждого Строка Из ПустыеСтрокиОплата Цикл
				Объект.Оплата.Удалить(Строка);
			КонецЦикла;

			ПустыеСтрокиОплата = Объект.ВозвратОплаты.НайтиСтроки(Новый Структура(""СуммаОплаты"", 0));

			Для Каждого Строка Из ПустыеСтрокиОплата Цикл
				Объект.Оплата.Удалить(Строка);
			КонецЦикла;         

			ПустыеСтрокиТовары = Объект.Товары.НайтиСтроки(Новый Структура(""Сумма"", 0));

			Для Каждого Строка Из ПустыеСтрокиТовары Цикл
				Объект.Товары.Удалить(Строка);
			КонецЦикла;

			ПустыеСтрокиТовары = Объект.Возвраты.НайтиСтроки(Новый Структура(""Сумма"", 0));

			Для Каждого Строка Из ПустыеСтрокиТовары Цикл
				Объект.Товары.Удалить(Строка);
			КонецЦикла;


			ВидОплатыПоУмолчанию = Справочники.ВидыОплатОрганизаций.Выбрать();
			ВидОплатыПоУмолчанию.Следующий();
			ВидОплатыПоУмолчанию = ВидОплатыПоУмолчанию.Ссылка;
			Для Каждого ТекСтрока Из Объект.Оплата Цикл
				ТекСтрока.ВидОплаты = ВидОплатыПоУмолчанию;		
			КонецЦикла;

			Для Каждого ТекСтрока Из Объект.ВозвратОплаты Цикл
				ТекСтрока.ВидОплаты = ВидОплатыПоУмолчанию;		
			КонецЦикла;</ПослеЗагрузки>
							<Источник>ДокументСсылка.ОтчетОРозничныхПродажах</Источник>
							<Приемник>ДокументСсылка.ОтчетОРозничныхПродажах</Приемник>
							<Свойства>
								<Свойство>
									<Код>1</Код>
									<Наименование>Номер --&gt; Номер</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя=""Номер"" Вид=""Свойство"" Тип=""Строка""/>
									<Приемник Имя=""Номер"" Вид=""Свойство"" Тип=""Строка""/>
								</Свойство>
								<Свойство Поиск=""true"">
									<Код>2</Код>
									<Наименование>Дата --&gt; Дата</Наименование>
									<Порядок>100</Порядок>
									<Источник Имя=""Дата"" Вид=""Свойство"" Тип=""Дата""/>
									<Приемник Имя=""Дата"" Вид=""Свойство"" Тип=""Дата""/>
								</Свойство>
								<Свойство>
									<Код>3</Код>
									<Наименование>ВалютаДокумента --&gt; ВалютаДокумента</Наименование>
									<Порядок>150</Порядок>
									<Источник Имя=""ВалютаДокумента"" Вид=""Реквизит"" Тип=""СправочникСсылка.Валюты""/>
									<Приемник Имя=""ВалютаДокумента"" Вид=""Реквизит"" Тип=""СправочникСсылка.Валюты""/>
									<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>4</Код>
									<Наименование>ВидОперации --&gt; ВидОперации</Наименование>
									<Порядок>200</Порядок>
									<Источник Имя=""ВидОперации"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.ВидыОперацийОтчетОРозничныхПродажах""/>
									<Приемник Имя=""ВидОперации"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.ВидыОперацийОтчетОРозничныхПродажах""/>
								</Свойство>
								<Свойство>
									<Код>5</Код>
									<Наименование>Комментарий --&gt; Комментарий</Наименование>
									<Порядок>250</Порядок>
									<Источник Имя=""Комментарий"" Вид=""Реквизит"" Тип=""Строка""/>
									<Приемник Имя=""Комментарий"" Вид=""Реквизит"" Тип=""Строка""/>
								</Свойство>
								<Свойство>
									<Код>6</Код>
									<Наименование>Организация --&gt; Организация</Наименование>
									<Порядок>300</Порядок>
									<Источник Имя=""Организация"" Вид=""Реквизит"" Тип=""СправочникСсылка.Организации""/>
									<Приемник Имя=""Организация"" Вид=""Реквизит"" Тип=""СправочникСсылка.Организации""/>
								</Свойство>
								<Свойство>
									<Код>7</Код>
									<Наименование>Склад --&gt; Склад</Наименование>
									<Порядок>350</Порядок>
									<Источник Имя=""Склад"" Вид=""Реквизит"" Тип=""СправочникСсылка.Склады""/>
									<Приемник Имя=""Склад"" Вид=""Реквизит"" Тип=""СправочникСсылка.Склады""/>
									<КодПравилаКонвертации>Кассы                                             </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>8</Код>
									<Наименование>СуммаВключаетНДС --&gt; СуммаВключаетНДС</Наименование>
									<Порядок>400</Порядок>
									<Источник Имя=""СуммаВключаетНДС"" Вид=""Реквизит"" Тип=""Булево""/>
									<Приемник Имя=""СуммаВключаетНДС"" Вид=""Реквизит"" Тип=""Булево""/>
								</Свойство>
								<Группа>
									<Код>9</Код>
									<Наименование>Оплата --&gt; Оплата</Наименование>
									<Порядок>450</Порядок>
									<Источник Имя=""Оплата"" Вид=""ТабличнаяЧасть""/>
									<Приемник Имя=""Оплата"" Вид=""ТабличнаяЧасть""/>
									<Свойство>
										<Код>10</Код>
										<Наименование>СуммаОплаты --&gt; СуммаОплаты</Наименование>
										<Порядок>50</Порядок>
										<Источник Имя=""СуммаОплаты"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""СуммаОплаты"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
								</Группа>
								<Группа>
									<Код>11</Код>
									<Наименование>Товары --&gt; Товары</Наименование>
									<Порядок>500</Порядок>
									<Источник Имя=""Товары"" Вид=""ТабличнаяЧасть""/>
									<Приемник Имя=""Товары"" Вид=""ТабличнаяЧасть""/>
									<Свойство>
										<Код>12</Код>
										<Наименование>Количество --&gt; Количество</Наименование>
										<Порядок>50</Порядок>
										<Источник Имя=""Количество"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Количество"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>13</Код>
										<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
										<Порядок>100</Порядок>
										<Источник Имя=""Номенклатура"" Вид=""Реквизит"" Тип=""СправочникСсылка.Номенклатура""/>
										<Приемник Имя=""Номенклатура"" Вид=""Реквизит"" Тип=""СправочникСсылка.Номенклатура""/>
										<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
									</Свойство>
									<Свойство>
										<Код>14</Код>
										<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
										<Порядок>150</Порядок>
										<Источник Имя=""СтавкаНДС"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.СтавкиНДС""/>
										<Приемник Имя=""СтавкаНДС"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.СтавкиНДС""/>
										<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
									</Свойство>
									<Свойство>
										<Код>15</Код>
										<Наименование>Сумма --&gt; Сумма</Наименование>
										<Порядок>200</Порядок>
										<Источник Имя=""Сумма"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Сумма"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>16</Код>
										<Наименование>СуммаНДС --&gt; СуммаНДС</Наименование>
										<Порядок>250</Порядок>
										<Источник Имя=""СуммаНДС"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""СуммаНДС"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>17</Код>
										<Наименование>Цена --&gt; Цена</Наименование>
										<Порядок>300</Порядок>
										<Источник Имя=""Цена"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Цена"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
								</Группа>
								<Группа>
									<Код>18</Код>
									<Наименование>ВозвратОплаты --&gt; ВозвратОплаты</Наименование>
									<Порядок>550</Порядок>
									<Источник Имя=""ВозвратОплаты"" Вид=""ТабличнаяЧасть""/>
									<Приемник Имя=""ВозвратОплаты"" Вид=""ТабличнаяЧасть""/>
									<Свойство>
										<Код>19</Код>
										<Наименование>СуммаОплаты --&gt; СуммаОплаты</Наименование>
										<Порядок>50</Порядок>
										<Источник Имя=""СуммаОплаты"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""СуммаОплаты"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
								</Группа>
								<Группа>
									<Код>20</Код>
									<Наименование>Возвраты --&gt; Возвраты</Наименование>
									<Порядок>600</Порядок>
									<Источник Имя=""Возвраты"" Вид=""ТабличнаяЧасть""/>
									<Приемник Имя=""Возвраты"" Вид=""ТабличнаяЧасть""/>
									<Свойство>
										<Код>21</Код>
										<Наименование>Количество --&gt; Количество</Наименование>
										<Порядок>50</Порядок>
										<Источник Имя=""Количество"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Количество"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>22</Код>
										<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
										<Порядок>100</Порядок>
										<Источник Имя=""Номенклатура"" Вид=""Реквизит"" Тип=""СправочникСсылка.Номенклатура""/>
										<Приемник Имя=""Номенклатура"" Вид=""Реквизит"" Тип=""СправочникСсылка.Номенклатура""/>
										<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
									</Свойство>
									<Свойство>
										<Код>23</Код>
										<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
										<Порядок>150</Порядок>
										<Источник Имя=""СтавкаНДС"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.СтавкиНДС""/>
										<Приемник Имя=""СтавкаНДС"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.СтавкиНДС""/>
										<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
									</Свойство>
									<Свойство>
										<Код>24</Код>
										<Наименование>Сумма --&gt; Сумма</Наименование>
										<Порядок>200</Порядок>
										<Источник Имя=""Сумма"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Сумма"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>25</Код>
										<Наименование>СуммаНДС --&gt; СуммаНДС</Наименование>
										<Порядок>250</Порядок>
										<Источник Имя=""СуммаНДС"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""СуммаНДС"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>26</Код>
										<Наименование>Цена --&gt; Цена</Наименование>
										<Порядок>300</Порядок>
										<Источник Имя=""Цена"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Цена"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
								</Группа>
							</Свойства>
							<Значения/>
						</Правило>
						<Правило>
							<Код>РеализацияТоваровУслуг</Код>
							<Наименование>Документ: Реализация (акты, накладные)</Наименование>
							<Порядок>150</Порядок>
							<ПриЗагрузке>Если НЕ Параметры.Свойство(""КомиссияПоСтрокамТабличнойЧасти"") Тогда
				
				Параметры.Вставить(""КомиссияПоСтрокамТабличнойЧасти"", Новый Соответствие);
				
			КонецЕсли;

			КомиссияПоСтрокамТабличнойЧасти = Новый Соответствие;

			Пока ФайлОбмена.Прочитать() Цикл
					
				ИмяУзла = ФайлОбмена.ЛокальноеИмя;
				ТипУзла = ФайлОбмена.ТипУзла;
				
				Если ИмяУзла = ""Строка"" Тогда
					
					КомиссияПоСтрокамТабличнойЧасти.Вставить(одАтрибут(ФайлОбмена, одТипЧисло, ""НомерСтроки""), одЗначениеЭлемента(ФайлОбмена, Тип(""Булево"")));
					
				ИначеЕсли (ИмяУзла = ""КомиссияПоСтрокамТабличнойЧасти"") И (ТипУзла = одТипУзлаXML_КонецЭлемента) Тогда
					
					Параметры.КомиссияПоСтрокамТабличнойЧасти.Вставить(Ссылка, КомиссияПоСтрокамТабличнойЧасти);
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;

			</ПриЗагрузке>
							<ПослеЗагрузки>

			СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
			Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
				Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
				Объект.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
				Объект.СчетУчетаРасчетовПоТаре        = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
			Иначе
				Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
				Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансовПокупателя;
				Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТарыПокупателя;
			КонецЕсли;
			Объект.СчетУчетаРасчетовПоТаре        = СчетаУчета.СчетУчетаТарыПокупателя;
			Объект.ДополнительныеСвойства.Вставить(""ЗаполнитьСчетаУчетаПередЗаписью"", Истина);

			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;   

			НДСПриОтгрузке = Неопределено;
			СоответствиеОрганизацийУчетныхПолитик = Неопределено;   
			Параметры.Свойство(""СоответствиеОрганизацийНДСПриОтгрузке"", СоответствиеОрганизацийУчетныхПолитик);

			Если СоответствиеОрганизацийУчетныхПолитик = Неопределено Тогда
				
				СоответствиеОрганизацийУчетныхПолитик = Новый Соответствие;
				Параметры.Вставить(""СоответствиеОрганизацийНДСПриОтгрузке"", Новый Соответствие);
				
			КонецЕсли;

			НДСПриОтгрузке = СоответствиеОрганизацийУчетныхПолитик.Получить(Объект.Организация);

			Если НДСПриОтгрузке = Неопределено Тогда

				ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);
				ФО = ПолучитьФункциональнуюОпцию(""НачислятьНДСПоОтгрузке"", 
					Новый Структура(""Организация, Период"", Объект.Организация, НачалоМесяца(Объект.Дата)));

				
				НДСПриОтгрузке = ПлательщикНДС ИЛИ ФО;
				СоответствиеОрганизацийУчетныхПолитик.Вставить(Объект.Организация, НДСПриОтгрузке);	
				
				//ВедетсяУчетНДСПоФЗ134 = УчетНДС.ВедетсяУчетНДСПоФЗ134(Объект.Дата);	

				//Сообщить(""ВедетсяУчетНДСПоФЗ134: "" + ВедетсяУчетНДСПоФЗ134);
				//Сообщить(""ПлательщикНДС: "" + ПлательщикНДС);
				//Сообщить(""НДСПриОтгрузке: "" + НДСПриОтгрузке);
				//Сообщить(""ФО: "" + ФО);
				
			КонецЕсли;


			Если НДСПриОтгрузке = Ложь Тогда
				
				Объект.ДокументБезНДС = Истина;
				
				Для Каждого Строка Из Объект.Товары Цикл
					
					Если Строка.Количество &lt;&gt; 0 Тогда
						Строка.Цена = Строка.Сумма / Строка.Количество;
					КонецЕсли;
							
					Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
					Строка.СуммаНДС = 0;  				
					
				КонецЦикла;
				
				Для Каждого Строка Из Объект.Услуги Цикл
					
					Если Строка.Количество &lt;&gt; 0 Тогда
						Строка.Цена = Строка.Сумма / Строка.Количество;
					КонецЕсли;
							
					Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
					Строка.СуммаНДС = 0;  				
					
				КонецЦикла;

				
			КонецЕсли;


			// Корректируем количество с учетом коэффициента
			Для каждого СтрокаТоваров Из Объект.Товары Цикл
				СтрокаТоваров.Количество = СтрокаТоваров.Количество * СтрокаТоваров.Коэффициент;
				Если СтрокаТоваров.Коэффициент&lt;&gt; 0 Тогда 
					СтрокаТоваров.Цена       = СтрокаТоваров.Цена / СтрокаТоваров.Коэффициент;
				КонецЕсли;
			КонецЦикла;
				
			Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Товары"") + УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, ""Услуги"");
			Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;</ПослеЗагрузки>
							<Источник>ДокументСсылка.РеализацияТоваровУслуг</Источник>
							<Приемник>ДокументСсылка.РеализацияТоваровУслуг</Приемник>
							<Свойства>
								<Свойство>
									<Код>1</Код>
									<Наименование>ВалютаДокумента --&gt; ВалютаДокумента</Наименование>
									<Порядок>50</Порядок>
									<Источник Имя=""ВалютаДокумента"" Вид=""Реквизит"" Тип=""СправочникСсылка.Валюты""/>
									<Приемник Имя=""ВалютаДокумента"" Вид=""Реквизит"" Тип=""СправочникСсылка.Валюты""/>
									<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>2</Код>
									<Наименование>ВидОперации --&gt; ВидОперации</Наименование>
									<Порядок>100</Порядок>
									<Источник Имя=""ВидОперации"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.ВидыОперацийРеализацияТоваров""/>
									<Приемник Имя=""ВидОперации"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.ВидыОперацийРеализацияТоваров""/>
								</Свойство>
								<Свойство>
									<Код>3</Код>
									<Наименование>ДоговорКонтрагента --&gt; ДоговорКонтрагента</Наименование>
									<Порядок>150</Порядок>
									<Источник Имя=""ДоговорКонтрагента"" Вид=""Реквизит"" Тип=""СправочникСсылка.ДоговорыКонтрагентов""/>
									<Приемник Имя=""ДоговорКонтрагента"" Вид=""Реквизит"" Тип=""СправочникСсылка.ДоговорыКонтрагентов""/>
									<КодПравилаКонвертации>ДоговорыКонтрагентов                              </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>4</Код>
									<Наименование>Комментарий --&gt; Комментарий</Наименование>
									<Порядок>200</Порядок>
									<Источник Имя=""Комментарий"" Вид=""Реквизит"" Тип=""Строка""/>
									<Приемник Имя=""Комментарий"" Вид=""Реквизит"" Тип=""Строка""/>
								</Свойство>
								<Свойство>
									<Код>5</Код>
									<Наименование>Контрагент --&gt; Контрагент</Наименование>
									<Порядок>250</Порядок>
									<Источник Имя=""Контрагент"" Вид=""Реквизит"" Тип=""СправочникСсылка.Контрагенты""/>
									<Приемник Имя=""Контрагент"" Вид=""Реквизит"" Тип=""СправочникСсылка.Контрагенты""/>
									<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>6</Код>
									<Наименование>КратностьВзаиморасчетов --&gt; КратностьВзаиморасчетов</Наименование>
									<Порядок>300</Порядок>
									<Источник Имя=""КратностьВзаиморасчетов"" Вид=""Реквизит"" Тип=""Число""/>
									<Приемник Имя=""КратностьВзаиморасчетов"" Вид=""Реквизит"" Тип=""Число""/>
								</Свойство>
								<Свойство>
									<Код>7</Код>
									<Наименование>КурсВзаиморасчетов --&gt; КурсВзаиморасчетов</Наименование>
									<Порядок>350</Порядок>
									<Источник Имя=""КурсВзаиморасчетов"" Вид=""Реквизит"" Тип=""Число""/>
									<Приемник Имя=""КурсВзаиморасчетов"" Вид=""Реквизит"" Тип=""Число""/>
								</Свойство>
								<Свойство>
									<Код>8</Код>
									<Наименование>Организация --&gt; Организация</Наименование>
									<Порядок>400</Порядок>
									<Источник Имя=""Организация"" Вид=""Реквизит"" Тип=""СправочникСсылка.Организации""/>
									<Приемник Имя=""Организация"" Вид=""Реквизит"" Тип=""СправочникСсылка.Организации""/>
									<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>9</Код>
									<Наименование>Склад --&gt; Склад</Наименование>
									<Порядок>450</Порядок>
									<Источник Имя=""Склад"" Вид=""Реквизит"" Тип=""СправочникСсылка.Склады""/>
									<Приемник Имя=""Склад"" Вид=""Реквизит"" Тип=""СправочникСсылка.Склады""/>
									<КодПравилаКонвертации>Кассы                                             </КодПравилаКонвертации>
								</Свойство>
								<Свойство>
									<Код>10</Код>
									<Наименование>СуммаВключаетНДС --&gt; СуммаВключаетНДС</Наименование>
									<Порядок>500</Порядок>
									<Источник Имя=""СуммаВключаетНДС"" Вид=""Реквизит"" Тип=""Булево""/>
									<Приемник Имя=""СуммаВключаетНДС"" Вид=""Реквизит"" Тип=""Булево""/>
								</Свойство>
								<Свойство Поиск=""true"">
									<Код>11</Код>
									<Наименование>Дата --&gt; Дата</Наименование>
									<Порядок>550</Порядок>
									<Источник Имя=""Дата"" Вид=""Свойство"" Тип=""Дата""/>
									<Приемник Имя=""Дата"" Вид=""Свойство"" Тип=""Дата""/>
								</Свойство>
								<Свойство Поиск=""true"">
									<Код>12</Код>
									<Наименование>Номер --&gt; Номер</Наименование>
									<Порядок>600</Порядок>
									<Источник Имя=""Номер"" Вид=""Свойство"" Тип=""Строка""/>
									<Приемник Имя=""Номер"" Вид=""Свойство"" Тип=""Строка""/>
								</Свойство>
								<Группа>
									<Код>13</Код>
									<Наименование>Товары --&gt; Товары</Наименование>
									<Порядок>650</Порядок>
									<Источник Имя=""Товары"" Вид=""ТабличнаяЧасть""/>
									<Приемник Имя=""Товары"" Вид=""ТабличнаяЧасть""/>
									<Свойство>
										<Код>14</Код>
										<Наименование>Количество --&gt; Количество</Наименование>
										<Порядок>50</Порядок>
										<Источник Имя=""Количество"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Количество"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>15</Код>
										<Наименование>Коэффициент --&gt; Коэффициент</Наименование>
										<Порядок>100</Порядок>
										<Источник Имя=""Коэффициент"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Коэффициент"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>16</Код>
										<Наименование>Номенклатура --&gt; Номенклатура</Наименование>
										<Порядок>150</Порядок>
										<Источник Имя=""Номенклатура"" Вид=""Реквизит"" Тип=""СправочникСсылка.Номенклатура""/>
										<Приемник Имя=""Номенклатура"" Вид=""Реквизит"" Тип=""СправочникСсылка.Номенклатура""/>
										<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
									</Свойство>
									<Свойство>
										<Код>17</Код>
										<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
										<Порядок>200</Порядок>
										<Источник Имя=""СтавкаНДС"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.СтавкиНДС""/>
										<Приемник Имя=""СтавкаНДС"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.СтавкиНДС""/>
										<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
									</Свойство>
									<Свойство>
										<Код>18</Код>
										<Наименование>Сумма --&gt; Сумма</Наименование>
										<Порядок>250</Порядок>
										<Источник Имя=""Сумма"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Сумма"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>19</Код>
										<Наименование>СуммаНДС --&gt; СуммаНДС</Наименование>
										<Порядок>300</Порядок>
										<Источник Имя=""СуммаНДС"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""СуммаНДС"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
									<Свойство>
										<Код>20</Код>
										<Наименование>Цена --&gt; Цена</Наименование>
										<Порядок>350</Порядок>
										<Источник Имя=""Цена"" Вид=""Реквизит"" Тип=""Число""/>
										<Приемник Имя=""Цена"" Вид=""Реквизит"" Тип=""Число""/>
									</Свойство>
								</Группа>
							</Свойства>
							<Значения/>
						</Правило>
						<Правило>
							<Код>СчетФактураВыданный</Код>
							<Наименование>Документ: Счет-фактура выданный</Наименование>
							<Порядок>250</Порядок>
							<ПослеЗагрузки>НДСПриОтгрузке = Неопределено;
			СоответствиеОрганизацийУчетныхПолитик = Неопределено;   
			Параметры.Свойство(""СоответствиеОрганизацийНДСПриОтгрузке"", СоответствиеОрганизацийУчетныхПолитик);

			Если СоответствиеОрганизацийУчетныхПолитик = Неопределено Тогда
				
				СоответствиеОрганизацийУчетныхПолитик = Новый Соответствие;
				Параметры.Вставить(""СоответствиеОрганизацийНДСПриОтгрузке"", Новый Соответствие);
				
			КонецЕсли;

			НДСПриОтгрузке = СоответствиеОрганизацийУчетныхПолитик.Получить(Объект.Организация);

			Если НДСПриОтгрузке = Неопределено Тогда

				ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);
				ФО = ПолучитьФункциональнуюОпцию(""НачислятьНДСПоОтгрузке"", 
					Новый Структура(""Организация, Период"", Объект.Организация, НачалоМесяца(Объект.Дата)));

				
				НДСПриОтгрузке = ПлательщикНДС ИЛИ ФО;
				СоответствиеОрганизацийУчетныхПолитик.Вставить(Объект.Организация, НДСПриОтгрузке);	
				
				//ВедетсяУчетНДСПоФЗ134 = УчетНДС.ВедетсяУчетНДСПоФЗ134(Объект.Дата);	

				//Сообщить(""ВедетсяУчетНДСПоФЗ134: "" + ВедетсяУчетНДСПоФЗ134);
				//Сообщить(""ПлательщикНДС: "" + ПлательщикНДС);
				//Сообщить(""НДСПриОтгрузке: "" + НДСПриОтгрузке);
				//Сообщить(""СФ: НДСПриОтгрузке: "" + НДСПриОтгрузке);
				
			КонецЕсли;

			Если НДСПриОтгрузке = Ложь Тогда
				
				Отказ = Истина;
				
			КонецЕсли;

			Если НЕ Отказ Тогда 
			Если Объект.Ответственный.Пустая() Тогда
				Объект.Ответственный = Пользователи.ТекущийПользователь();
			КонецЕсли;

			Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
				НеНашлиДокументОснование = Истина;
				Для каждого ДокументОснование из Объект.ДокументыОснования Цикл
					Если ДокументОснование.ДокументОснование = Объект.ДокументОснование Тогда
						НеНашлиДокументОснование = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;

				Если НеНашлиДокументОснование Тогда
					НовыйДокументОснование = Объект.ДокументыОснования.Добавить();
					НовыйДокументОснование.ДокументОснование = Объект.ДокументОснование;
				КонецЕсли;
				
				Если ТипЗнч(Объект.ДокументОснование) = Тип(""ДокументСсылка.КорректировкаДолга"") Тогда
					Объект.Контрагент = Неопределено;
					Объект.ДоговорКонтрагента = Неопределено;
					Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс;
				КонецЕсли;

			КонецЕсли;

			Если (Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс) И (Объект.Авансы.Количество() = 0) Тогда
					Объект.Авансы.Добавить();
					Объект.Авансы[0].СтавкаНДС = Объект.СтавкаНДС;
					Объект.Авансы[0].СуммаНДС = Объект.СуммаНДС;
					Объект.Авансы[0].Сумма = Объект.Сумма;
					Объект.СуммаДокумента = Объект.Сумма;
					
			КонецЕсли;

			Объект.ОпределениеПараметровСчетаФактурыНаРеализацию();


			КонецЕсли;</ПослеЗагрузки>
							<Источник>ДокументСсылка.СчетФактураВыданный</Источник>
							<Приемник>ДокументСсылка.СчетФактураВыданный</Приемник>
							<Свойства/>
							<Значения/>
						</Правило>
					</Группа>
					<Правило>
						<Код>Организации</Код>
						<Наименование>Справочник: Организации</Наименование>
						<Порядок>100</Порядок>
						<Источник>СправочникСсылка.Организации</Источник>
						<Приемник>СправочникСсылка.Организации</Приемник>
						<Свойства/>
						<Значения/>
					</Правило>
					<Правило>
						<Код>ДоговорыКонтрагентов</Код>
						<Наименование>Справочник: Договоры</Наименование>
						<Порядок>200</Порядок>
						<ПослеЗагрузки>Объект.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
			Объект.СпособВыставленияДокументов = Перечисления.СпособыВыставленияДокументов.Автоматически;

			Если НЕ ОбъектНайден И НЕ Отказ Тогда 
				
				//СсылкаНового = Справочники.ДоговорыКонтрагентов.ПолучитьСсылку();
				//Объект.УстановитьСсылкуНового(СсылкаНового);
				
				СсылкаНового = Объект.ПолучитьСсылкуНового();

				НоваяЗапись = РегистрыСведений.ОсновныеДоговорыКонтрагента.СоздатьМенеджерЗаписи();
				НоваяЗапись.Организация = Объект.Организация;
				НоваяЗапись.Контрагент  = Объект.Владелец;
				НоваяЗапись.ВидДоговора = Объект.ВидДоговора;    
				НоваяЗапись.Договор = СсылкаНового; 
				НоваяЗапись.Записать();
				//Сообщить(""Сделали основным новый (после заргузки)"");

				ОбъектМодифицирован = Ложь;

			КонецЕсли;</ПослеЗагрузки>
						<ПоследовательностьПолейПоиска>СтрокаИменСвойствПоиска = ""Организация, Владелец, ВидДоговора"";
			//Сообщить(""ПоследовательностьПолейПоиска"");
			Если НомерВариантаПоиска = 1 Тогда 
				
				НоваяЗапись = РегистрыСведений.ОсновныеДоговорыКонтрагента.СоздатьМенеджерЗаписи();
				НоваяЗапись.Организация = СвойстваПоиска[""Организация""];
				НоваяЗапись.Контрагент  = СвойстваПоиска[""Владелец""];
				НоваяЗапись.ВидДоговора = СвойстваПоиска[""ВидДоговора""];
				НоваяЗапись.Прочитать();    
				ОсновнойДоговор = НоваяЗапись.Договор; 
				
				Если ЗначениеЗаполнено(ОсновнойДоговор) Тогда
					
					СсылкаНаОбъект = ОсновнойДоговор;
					УстанавливатьУОбъектаВсеСвойстваПоиска = Ложь;   
					ПрекратитьПоиск = Истина;
					//Сообщить(""Нашли основной"");
					
				Иначе		
					//Сообщить(""Пробуем найти остатки"");
					//Попробуем найти договор с взаиморасчетами или первый попавшийся
					лТекст = ""
					|ВЫБРАТЬ ПЕРВЫЕ 1
					|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
					|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
					|ИЗ
					|	РегистрБухгалтерии.Хозрасчетный.Остатки(
					|			,
					|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками)),
					|			&amp;ВидыСубконто,
					|			Субконто1 = &amp;Контрагент
					|				И Организация = &amp;Организация) КАК ХозрасчетныйОстатки
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ ПЕРВЫЕ 1
					|	ДоговорыКонтрагентов.Ссылка,
					|	-999999999999
					|ИЗ
					|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
					|ГДЕ
					|	ДоговорыКонтрагентов.Владелец = &amp;Контрагент
					|	И ДоговорыКонтрагентов.Организация = &amp;Организация
					|	И ДоговорыКонтрагентов.ВидДоговора = &amp;ВидДоговора
					|
					|УПОРЯДОЧИТЬ ПО
					|	СуммаОстаток УБЫВ"";
					
					лЗапрос = Новый Запрос(лТекст);
					
					// Присвоение значений переменным параметров.
					ВидыСубконто = Новый Массив;
					ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты); // Контрагенты (00005)
					ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры); // Договоры (00016)
					
					Контрагент = СвойстваПоиска[""Владелец""]; // ООО «ПаттернМастерс» (00-000077)
					
					Организация = СвойстваПоиска[""Организация""]; // ООО ""Веселый Водовоз Юг"" (00-000001)
					
					// Установка параметров.
					лЗапрос.УстановитьПараметр(""ВидыСубконто"", ВидыСубконто);
					лЗапрос.УстановитьПараметр(""Контрагент"", Контрагент);
					лЗапрос.УстановитьПараметр(""Организация"", Организация);
					лЗапрос.УстановитьПараметр(""ВидДоговора"", СвойстваПоиска[""ВидДоговора""]);
					
					Результат = лЗапрос.Выполнить();
					
					Если НЕ Результат.Пустой() Тогда

						//Сообщить(""Нашли остатки"");
						
						лВыборка = Результат.Выбрать();
						лВыборка.Следующий(); 
						Если ЗначениеЗаполнено(лВыборка.Договор) Тогда	
							//Сообщить(""Остаток: "" + лВыборка.СуммаОстаток);		
							СсылкаНаОбъект = лВыборка.Договор; 			
							НоваяЗапись.Договор = СсылкаНаОбъект;
							НоваяЗапись.Организация = СвойстваПоиска[""Организация""];
							НоваяЗапись.Контрагент  = СвойстваПоиска[""Владелец""];
							НоваяЗапись.ВидДоговора = СвойстваПоиска[""ВидДоговора""];
							НоваяЗапись.Записать();
							УстанавливатьУОбъектаВсеСвойстваПоиска = Ложь;   
							ПрекратитьПоиск = Истина; 
							//Сообщить(""Записали как основной из остатков: "" + СсылкаНаОбъект);
						КонецЕсли;
						
					КонецЕсли;	
					
				КонецЕсли; 
				
			КонецЕсли;</ПоследовательностьПолейПоиска>
						<НеЗамещать>true</НеЗамещать>
						<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
						<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
						<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
						<Источник>СправочникСсылка.ДоговорыКонтрагентов</Источник>
						<Приемник>СправочникСсылка.ДоговорыКонтрагентов</Приемник>
						<Свойства>
							<Свойство>
								<Код>1</Код>
								<Наименование>ВалютаВзаиморасчетов --&gt; ВалютаВзаиморасчетов</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя=""ВалютаВзаиморасчетов"" Вид=""Реквизит"" Тип=""СправочникСсылка.Валюты""/>
								<Приемник Имя=""ВалютаВзаиморасчетов"" Вид=""Реквизит"" Тип=""СправочникСсылка.Валюты""/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство Поиск=""true"">
								<Код>2</Код>
								<Наименование>Организация --&gt; Организация</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя=""Организация"" Вид=""Реквизит"" Тип=""СправочникСсылка.Организации""/>
								<Приемник Имя=""Организация"" Вид=""Реквизит"" Тип=""СправочникСсылка.Организации""/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство Поиск=""true"">
								<Код>3</Код>
								<Наименование>Владелец --&gt; Владелец</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя=""Владелец"" Вид=""Свойство"" Тип=""СправочникСсылка.Контрагенты""/>
								<Приемник Имя=""Владелец"" Вид=""Свойство"" Тип=""СправочникСсылка.Контрагенты""/>
								<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>4</Код>
								<Наименование>Код --&gt; Код</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя=""Код"" Вид=""Свойство"" Тип=""Строка""/>
								<Приемник Имя=""Код"" Вид=""Свойство"" Тип=""Строка""/>
							</Свойство>
							<Свойство>
								<Код>5</Код>
								<Наименование>Наименование --&gt; Наименование</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя=""Наименование"" Вид=""Свойство"" Тип=""Строка""/>
								<Приемник Имя=""Наименование"" Вид=""Свойство"" Тип=""Строка""/>
							</Свойство>
							<Свойство Поиск=""true"" Обязательное=""true"">
								<Код>6</Код>
								<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя=""ЭтоГруппа"" Вид=""Свойство"" Тип=""Булево""/>
								<Приемник Имя=""ЭтоГруппа"" Вид=""Свойство"" Тип=""Булево""/>
							</Свойство>
							<Свойство Поиск=""true"">
								<Код>7</Код>
								<Наименование>ВидДоговора --&gt; ВидДоговора</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя=""ВидДоговора"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.ВидыДоговоровКонтрагентов""/>
								<Приемник Имя=""ВидДоговора"" Вид=""Реквизит"" Тип=""ПеречислениеСсылка.ВидыДоговоровКонтрагентов""/>
							</Свойство>
						</Свойства>
						<Значения/>
					</Правило>
				</ПравилаКонвертацииОбъектов>
				<ПравилаВыгрузкиДанных>
					<Правило Отключить=""true"">
						<Код>Пустышка</Код>
						<Наименование>Пустышка</Наименование>
						<Порядок>50</Порядок>
						<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					</Правило>
				</ПравилаВыгрузкиДанных>
				<ПравилаОчисткиДанных/>
				<Алгоритмы>
					<Алгоритм Имя=""НДСПриОтгрузке"" ИспользуетсяПриЗагрузке=""true"">
						<Текст>СоответствиеОрганизацийУчетныхПолитик = Неопределено;   
			Параметры.Свойство(""СоответствиеОрганизацийНДСПриОтгрузке"", СоответствиеОрганизацийУчетныхПолитик);

			Если СоответствиеОрганизацийУчетныхПолитик = Неопределено Тогда
				
				СоответствиеОрганизацийУчетныхПолитик = Новый Соответствие;
				Параметры.Вставить(""СоответствиеОрганизацийНДСПриОтгрузке"", Новый Соответствие);
				
			КонецЕсли;

			НДСПриОтгрузке = СоответствиеОрганизацийУчетныхПолитик.Получить(Объект.Организация);

			Если НДСПриОтгрузке = Неопределено Тогда

				ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);
				ФО = ПолучитьФункциональнуюОпцию(""НачислятьНДСПоОтгрузке"", 
					Новый Структура(""Организация, Период"", Объект.Организация, НачалоМесяца(Объект.Дата)));

				
				НДСПриОтгрузке = ПлательщикНДС ИЛИ ФО;
				СоответствиеОрганизацийУчетныхПолитик.Вставить(Объект.Организация, НДСПриОтгрузке);	
				
				//ВедетсяУчетНДСПоФЗ134 = УчетНДС.ВедетсяУчетНДСПоФЗ134(Объект.Дата);	

				//Сообщить(""ВедетсяУчетНДСПоФЗ134: "" + ВедетсяУчетНДСПоФЗ134);
				//Сообщить(""ПлательщикНДС: "" + ПлательщикНДС);
				Сообщить(""НДСПриОтгрузке: "" + НДСПриОтгрузке);
				//Сообщить(""ФО: "" + ФО);
				
			КонецЕсли;
			</Текст>
					</Алгоритм>
					<Алгоритм Имя=""ПолучитьСтруктуруАдреса"" ИспользуетсяПриЗагрузке=""false"">
						<Текст>Адрес = ИсходящиеДанные.Получить(""Адрес"");
			АдресСписком = глРазложить(Адрес);

			Если СтрКоличествоСтрок(Адрес) &lt;&gt; 1 Тогда     // не должно быть переводов строк
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрЧислоВхождений(Адрес, "","") &lt;&gt; 9 Тогда // должно быть 9 запятых
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(1))  &gt; 3  Тогда   // код страны не &gt; 3 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(2))  &gt; 6  Тогда   // индекс не &gt; 6 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(3))  &gt; 30 Тогда   // наим.региона не &gt; 30 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(4))  &gt; 35 Тогда   // наим.района не &gt; 35 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(5))  &gt; 35 Тогда   // наим.города не &gt; 35 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(6))  &gt; 45 Тогда   // наим.нас.пункта не &gt; 45 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(7))  &gt; 45 Тогда   // наим.улицы не &gt; 45 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(8))  &gt; 10  Тогда   // номер дома не &gt; 10 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(9))  &gt; 10  Тогда   // номер корпуса не &gt; 10 символов
				АдресСоответствуетТребованиямМНС = 0;
			ИначеЕсли СтрДлина(АдресСписком.ПолучитьЗначение(10)) &gt; 10  Тогда   // номер квартиры не &gt; 10 символов
				АдресСоответствуетТребованиямМНС = 0;
			Иначе
				АдресСоответствуетТребованиямМНС = 1;
			КонецЕсли;

			Если АдресСоответствуетТребованиямМНС = 1 Тогда
				ИсходящиеДанные.Установить(""Поле1"", АдресСписком.ПолучитьЗначение(2)); // индекс
				ИсходящиеДанные.Установить(""Поле2"", АдресСписком.ПолучитьЗначение(3)); // регион
				ИсходящиеДанные.Установить(""Поле3"", АдресСписком.ПолучитьЗначение(4)); // район
				ИсходящиеДанные.Установить(""Поле4"", АдресСписком.ПолучитьЗначение(5)); // город
				ИсходящиеДанные.Установить(""Поле5"", АдресСписком.ПолучитьЗначение(6)); // населенный пункт
				ИсходящиеДанные.Установить(""Поле6"", АдресСписком.ПолучитьЗначение(7)); // улица
				ИсходящиеДанные.Установить(""Поле7"", АдресСписком.ПолучитьЗначение(8)); // дом
				ИсходящиеДанные.Установить(""Поле8"", АдресСписком.ПолучитьЗначение(9)); // корпус
				ИсходящиеДанные.Установить(""Поле9"", АдресСписком.ПолучитьЗначение(10)); // квартира
				ИсходящиеДанные.Установить(""ТипДома"",		?(ПустоеЗначение(АдресСписком.ПолучитьЗначение(8))=1, """", ""Дом""));
				ИсходящиеДанные.Установить(""ТипКвартиры"",	?(ПустоеЗначение(АдресСписком.ПолучитьЗначение(9))=1, """", ""Квартира""));
				ИсходящиеДанные.Установить(""ТипКорпуса"",	?(ПустоеЗначение(АдресСписком.ПолучитьЗначение(10))=1,"""", ""Корпус""));
				
				ТекПредставление = """";
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле1"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", "" + СокрЛП(ИсходящиеДанные.Получить(""Поле1""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле2"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", "" + СокрЛП(ИсходящиеДанные.Получить(""Поле2""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле3"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", "" + СокрЛП(ИсходящиеДанные.Получить(""Поле3""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле4"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", "" + СокрЛП(ИсходящиеДанные.Получить(""Поле4""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле5"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", "" + СокрЛП(ИсходящиеДанные.Получить(""Поле5""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле6"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", "" + СокрЛП(ИсходящиеДанные.Получить(""Поле6""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле7"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", дом № "" + СокрЛП(ИсходящиеДанные.Получить(""Поле7""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле8"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", корпус "" + СокрЛП(ИсходящиеДанные.Получить(""Поле8""));
				КонецЕсли;
				
				Если СокрЛП(ИсходящиеДанные.Получить(""Поле9"")) &lt;&gt; """" Тогда
					ТекПредставление = ТекПредставление + "", кв."" + СокрЛП(ИсходящиеДанные.Получить(""Поле9""));
				КонецЕсли;
				
				Если СтрДлина(ТекПредставление) &gt; 2 Тогда
					ТекПредставление = Сред(ТекПредставление, 3);
				КонецЕсли;
				
				ИсходящиеДанные.Установить(""Представление"", ТекПредставление);
				
			Иначе
				//Сообщить(""Адрес: "" + Адрес + "" не соответствует требованиям МНС, ""+ИсходящиеДанные.Получить(""Объект""));
				ИсходящиеДанные.Установить(""Представление"", Адрес);
			КонецЕсли;</Текст>
					</Алгоритм>
				</Алгоритмы>
				<Запросы/>
			</ПравилаОбмена>";
			#endregion 
		}
	}
}
