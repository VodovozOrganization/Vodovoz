
// This file has been generated by the GUI designer. Do not modify.
namespace Vodovoz.Filters.GtkViews
{
	public partial class DriversWarehousesEventsJournalFilterView
	{
		private global::Gamma.GtkWidgets.yVBox vboxMain;

		private global::Gamma.GtkWidgets.yTable tableMain;

		private global::Gamma.Widgets.yEnumComboBox enumCmbEventType;

		private global::QS.Views.Control.EntityEntry eventNameEntry;

		private global::Gamma.GtkWidgets.yLabel lblEventName;

		private global::Gamma.GtkWidgets.yLabel lblEventType;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget Vodovoz.Filters.GtkViews.DriversWarehousesEventsJournalFilterView
			global::Stetic.BinContainer.Attach(this);
			this.Name = "Vodovoz.Filters.GtkViews.DriversWarehousesEventsJournalFilterView";
			// Container child Vodovoz.Filters.GtkViews.DriversWarehousesEventsJournalFilterView.Gtk.Container+ContainerChild
			this.vboxMain = new global::Gamma.GtkWidgets.yVBox();
			this.vboxMain.Name = "vboxMain";
			this.vboxMain.Spacing = 6;
			// Container child vboxMain.Gtk.Box+BoxChild
			this.tableMain = new global::Gamma.GtkWidgets.yTable();
			this.tableMain.Name = "tableMain";
			this.tableMain.NRows = ((uint)(2));
			this.tableMain.NColumns = ((uint)(3));
			this.tableMain.RowSpacing = ((uint)(6));
			this.tableMain.ColumnSpacing = ((uint)(6));
			// Container child tableMain.Gtk.Table+TableChild
			this.enumCmbEventType = global::Gtk.ComboBox.NewText();
			this.enumCmbEventType.Name = "enumCmbEventType";
			this.enumCmbEventType.ShowSpecialStateAll = false;
			this.enumCmbEventType.ShowSpecialStateNot = false;
			this.enumCmbEventType.UseShortTitle = false;
			this.enumCmbEventType.DefaultFirst = false;
			this.tableMain.Add(this.enumCmbEventType);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.tableMain[this.enumCmbEventType]));
			w1.TopAttach = ((uint)(1));
			w1.BottomAttach = ((uint)(2));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableMain.Gtk.Table+TableChild
			this.eventNameEntry = new global::QS.Views.Control.EntityEntry();
			this.eventNameEntry.Events = ((global::Gdk.EventMask)(256));
			this.eventNameEntry.Name = "eventNameEntry";
			this.tableMain.Add(this.eventNameEntry);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.tableMain[this.eventNameEntry]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(3));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableMain.Gtk.Table+TableChild
			this.lblEventName = new global::Gamma.GtkWidgets.yLabel();
			this.lblEventName.Name = "lblEventName";
			this.lblEventName.Xalign = 1F;
			this.lblEventName.LabelProp = global::Mono.Unix.Catalog.GetString("Событие:");
			this.tableMain.Add(this.lblEventName);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.tableMain[this.lblEventName]));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableMain.Gtk.Table+TableChild
			this.lblEventType = new global::Gamma.GtkWidgets.yLabel();
			this.lblEventType.Name = "lblEventType";
			this.lblEventType.Xalign = 1F;
			this.lblEventType.LabelProp = global::Mono.Unix.Catalog.GetString("Тип события:");
			this.tableMain.Add(this.lblEventType);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tableMain[this.lblEventType]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vboxMain.Add(this.tableMain);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vboxMain[this.tableMain]));
			w5.Position = 0;
			w5.Expand = false;
			w5.Fill = false;
			this.Add(this.vboxMain);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
		}
	}
}
