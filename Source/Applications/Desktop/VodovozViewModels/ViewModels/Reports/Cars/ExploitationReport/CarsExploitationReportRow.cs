using Gamma.Utilities;
using System;
using System.Collections.Generic;
using Vodovoz.Domain.Logistic.Cars;

namespace Vodovoz.ViewModels.ViewModels.Reports.Cars.ExploitationReport
{
	public class CarsExploitationReportRow
	{
		public int? RowNumber { get; set; }
		public int? CarOrderNumber { get; set; }
		public CarOwnType? CarOwnType { get; set; }

		public string CarOwnTypeName
		{
			get
			{
				if(CarOwnType == null)
				{
					return "";
				}

				switch(CarOwnType.Value)
				{
					case Domain.Logistic.Cars.CarOwnType.Company:
						return "K";
					case Domain.Logistic.Cars.CarOwnType.Raskat:
						return "Р";
					case Domain.Logistic.Cars.CarOwnType.Driver:
						return "В";
					default:
						throw new NotSupportedException($"CarOwnType {CarOwnType} is not supported");
				}
			}
		}

		public CarTypeOfUse? CarTypeOfUse { get; set; }

		public string CarTypeOfUseName
		{
			get
			{
				if(CarTypeOfUse == null)
				{
					return "";
				}

				switch(CarTypeOfUse)
				{
					case Domain.Logistic.Cars.CarTypeOfUse.Largus:
						return "Л";
					case Domain.Logistic.Cars.CarTypeOfUse.Truck:
						return "Ф";
					case Domain.Logistic.Cars.CarTypeOfUse.GAZelle:
						return "Г";
					case Domain.Logistic.Cars.CarTypeOfUse.Loader:
						return "П";
					default:
						throw new NotSupportedException($"CarTypeOfUse {CarTypeOfUse} is not supported");
				}
			}
		}

		public string RegNumber { get; set; }
		public Indicator Indicator { get; set; }
		public string IndicatorName => Indicator.GetEnumTitle();
		public string AssignedDriver { get; set; }
		public string GeographicalGroups { get; set; }
		public object[] Days { get; set; }
		public DateTime RowDate { get; set; }
		public Indicator? TotalRowIndicator { get; set; }
		public decimal? DaysTotal { get; set; }
		public IEnumerable<int> DaysWithFastDeliveryOrders { get; set; }
	}
}
